import numpy as np
import matplotlib.pyplot as plt

e = np.array([
      [99, 2560],[22, 2560],[99, 2560],[99, 2560],[99, 2560],[12, 2560],
      [92, 1920],[2, 1920],[86, 1920],[87, 1920],[92, 1920],[66, 1920],
      [9,1280],[0,960],[0,960],[0,960],[0,640],[0,640],
      [0,1280],[0,960],[0,960],[0,960],[0,640],[0,640],
      [9,1280],[0,960],[0,960],[0,960],[0,640],[0,640],
      [6,1280],[0,960],[0,960],[0,960],[0,640],[0,640],
      [6,1280],[0,960],[0,960],[0,960],[0,640],[0,640],
      [6,1280],[0,960],[0,960],[0,960],[0,640],[0,640],
])
e_ave = np.array([     [99,2560],[92,1920],[9,1280],[0,960],[0,640],  ])
s3 = np.array([
      [100,2560],[100,2560],[100,2560],[100,2560],[100,2560],[100,2560],
      [100,1920],[100,1920],[100,1920],[100,1920],[100,1920],[100,1920],
      [100,1280],[99,1280],[100,1280],[100,1280],[100,1280],[99,1280],
      [100,960],[63,960],[92,960],[53,960],[85,960],[97,960],
      [100,960],[44,960],[89,960],[42,960],[93,960],[79,960],
      [0,640],[0,640],[2,640],[0,640],[2,640],[6,640],
      [25,960],[16,960],[0,960],[0,960],[2,960],[5,960],
      [10,640],[0,640],[6,640],[0,640],[0,640],[0,640],
])
n5 = np.array([
      [100,2560],[100,2560],[100,2560],[100,2560],[100,2560],[100,2560],
      [100,1920],[100,1920],[100,1920],[100,1920],[100,1920],[100,1920],
      [97,1280],[99,1280],[99,1280],[95,1280],[95,1280],[93,1280],
      [83,960],[92,960],[98,960],[75,960],[87,960],[49,960],
      [61,960],[60,960],[69,960],[59,960],[26,960],[46,960],
      [0,640],[0,640],[0,640],[0,640],[0,640],[35,640],
      [0,960],[0,960],[88,960],[0,960],[0,960],[38,960],
      [0,640],[2,640],[2,640],[0,640],[0,640],[0,640],
])
d = np.array([
      [100,2560],[100,2560],[100,2560],[100,2560],[100,2560],[100,2560],
      [100,1920],[100,1920],[100,1920],[100,1920],[100,1920],[100,1920],
      [68,1280],[70,1280],[94,1280],[96,1280],[99,1280],[64,1280],
      [47,960],[0,960],[62,960],[87,960],[17,960],[58,960],
      [23,960],[6,960],[63,960],[57,960],[35,960],[27,960],
      [0,640],[0,640],[0,640],[0,640],[0,640],[0,640],
      [1,960],[0,960],[0,960],[0,960],[25,960],[1,960],
      [0,640],[0,640],[20,640],[0,640],[0,640],[0,640],
])

s4 = np.array([
      [100,2560],[100,2560],[100,2560],[100,2560],[100,2560],[100,2560],
      [100,1920],[100,1920],[100,1920],[100,1920],[100,1920],[100,1920],
      [90,1280],[90,1280],[93,1280],[95,1280],[100,1280],[87,1280],
      [75,960],[84,960],[12,960],[35,960],[85,960],[20,960],
      [58,960],[56,960],[9,960],[21,960],[66,960],[2,960],
      [0,640],[0,640],[0,640],[0,640],[0,640],[0,640],
      [12,960],[9,960],[42,960],[0,960],[11,960],[0,960],
      [1,640],[0,640],[0,640],[0,640],[1,640],[0,640],
])
s5 = np.array([
      [100,2560],[100,2560],[100,2560],[100,2560],[100,2560],[100,2560],
      [100,1920],[100,1920],[100,1920],[100,1920],[100,1920],[100,1920],
      [95,1280],[95,1280],[98,1280],[80,1280],[84,1280],[77,1280],
      [50,960],[76,960],[74,960],[1,960],[17,960],[13,960],
      [42,960],[70,960],[51,960],[9,960],[7,960],[6,960],
      [8,640],[0,640],[0,640],[0,640],[0,640],[0,640],
      [15,960],[7,960],[24,960],[2,960],[2,960],[5,960],
      [0,640],[0,640],[0,640],[0,640],[0,640],[0,640],
])
datas = (e, s3)
colors = ("red", "blue")
groups = ("Elementary", "Three State")
fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)   

#fig, ax = plt.subplots()

#for data, color, group in zip(datas, colors, groups):
#x, y = e_ave.T
#ax.scatter(x, y, c=color, edgecolor='none', s=30, label=group)
#ax.scatter( y,x, edgecolor='none', s=30, label='Elementary', alpha=0.5)
width = 0.35
x = [30, 40, 50, 60]
y = [100, 200, 300, 400]
#ax.bar( y,x, align='center', width, label='Elementary')
ax.bar( y,x, align='edge',width=8, label='Elementary')
'''
x,y = s3.T
ax.scatter( y,x, c='red', edgecolor='none', s=30, label='Three State', 
      alpha=0.5)

x,y = n5.T
ax.scatter( y,x, c='green', edgecolor='none', s=30, label='Neighborhood Five', 
      alpha=0.5)

x,y = d.T
ax.scatter( y,x, c='c', edgecolor='none', s=30, label='Density', alpha=0.5)

x,y = s4.T
ax.scatter( y,x, c='m', edgecolor='none', s=30, label='Four State', alpha=0.5)

x,y = s5.T
ax.scatter( y,x, c='y', edgecolor='none', s=30, label='Five State', alpha=0.5)
'''


plt.title('Correct predictions vs. reservoir size on 5-bit task')

plt.ylabel('Percent correct')
plt.xlabel('Reservoir size')
plt.legend(loc='best')
plt.show()
  







